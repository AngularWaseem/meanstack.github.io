{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/addpost/addpost.component.css","webpack:///./src/app/addpost/addpost.component.html","webpack:///./src/app/addpost/addpost.component.ts","webpack:///./src/app/allpost/allpost.component.css","webpack:///./src/app/allpost/allpost.component.html","webpack:///./src/app/allpost/allpost.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/material.module.ts","webpack:///./src/app/edit/edit.component.css","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/error/error.component.css","webpack:///./src/app/error/error.component.html","webpack:///./src/app/error/error.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/service/addpost.service.ts","webpack:///./src/app/service/edit.service.ts","webpack:///./src/app/service/getpost.service.ts","webpack:///./src/app/service/login.service.ts","webpack:///./src/app/service/register.service.ts","webpack:///./src/app/signup/signup.component.css","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/app/validation/custom-error.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"/*.example-card {\\r\\n    width: 400px;\\r\\n    margin: 10% auto;\\r\\n    }\\r\\n    .mat-card-title{\\r\\n    font-size: 16px;\\r\\n    }*/\\r\\n\\r\\n    .fill-remaining-space {\\r\\n        /* This fills the remaining space, by using flexbox. \\r\\n           Every toolbar row uses a flexbox row layout. */\\r\\n        flex: 1 1 auto;\\r\\n      }\\r\\n\\r\\n    .container {\\r\\n        padding: 10px;\\r\\n      }\\r\\n\\r\\n    .form {\\r\\n        min-width: 150px;\\r\\n        max-width: 500px;\\r\\n        width: 30%;\\r\\n      }\\r\\n\\r\\n    .form-element {\\r\\n        padding: 5px 0px 25px 2px;\\r\\n        width: 100%;\\r\\n      }\\r\\n\\r\\n    .button {\\r\\n        width: 80%;\\r\\n      }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRkcG9zdC9hZGRwb3N0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztNQU1NOztJQUVGO1FBQ0k7eURBQ2lEO1FBQ2pELGNBQWM7TUFDaEI7O0lBRUE7UUFDRSxhQUFhO01BQ2Y7O0lBRUE7UUFDRSxnQkFBZ0I7UUFDaEIsZ0JBQWdCO1FBQ2hCLFVBQVU7TUFDWjs7SUFFQTtRQUNFLHlCQUF5QjtRQUN6QixXQUFXO01BQ2I7O0lBRUE7UUFDRSxVQUFVO01BQ1oiLCJmaWxlIjoic3JjL2FwcC9hZGRwb3N0L2FkZHBvc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qLmV4YW1wbGUtY2FyZCB7XHJcbiAgICB3aWR0aDogNDAwcHg7XHJcbiAgICBtYXJnaW46IDEwJSBhdXRvO1xyXG4gICAgfVxyXG4gICAgLm1hdC1jYXJkLXRpdGxle1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgfSovXHJcblxyXG4gICAgLmZpbGwtcmVtYWluaW5nLXNwYWNlIHtcclxuICAgICAgICAvKiBUaGlzIGZpbGxzIHRoZSByZW1haW5pbmcgc3BhY2UsIGJ5IHVzaW5nIGZsZXhib3guIFxyXG4gICAgICAgICAgIEV2ZXJ5IHRvb2xiYXIgcm93IHVzZXMgYSBmbGV4Ym94IHJvdyBsYXlvdXQuICovXHJcbiAgICAgICAgZmxleDogMSAxIGF1dG87XHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgICAgIC5jb250YWluZXIge1xyXG4gICAgICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgICAgIC5mb3JtIHtcclxuICAgICAgICBtaW4td2lkdGg6IDE1MHB4O1xyXG4gICAgICAgIG1heC13aWR0aDogNTAwcHg7XHJcbiAgICAgICAgd2lkdGg6IDMwJTtcclxuICAgICAgfVxyXG4gICAgICBcclxuICAgICAgLmZvcm0tZWxlbWVudCB7XHJcbiAgICAgICAgcGFkZGluZzogNXB4IDBweCAyNXB4IDJweDtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgfVxyXG4gICAgICBcclxuICAgICAgLmJ1dHRvbiB7XHJcbiAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgfSJdfQ== */\"","module.exports = \"<div class=\\\"container\\\"> \\n    <form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"onSubmit(formGroup.value)\\\" class=\\\"form\\\">\\n  \\n      <mat-form-field floatLabel=\\\"never\\\" class=\\\"form-element\\\">\\n        <input type=\\\"text\\\" matInput placeholder=\\\"Post Title\\\" formControlName=\\\"ptitle\\\">\\n        <mat-error *ngIf=\\\"formGroup.controls['ptitle'].invalid\\\">\\n          {{getError('ptitle')}}\\n        </mat-error>\\n      </mat-form-field>\\n  \\n\\n      \\n      <mat-form-field floatLabel=\\\"never\\\" class=\\\"form-element\\\">\\n          <textarea matInput placeholder=\\\"Post Description\\\" formControlName=\\\"pdesc\\\"></textarea>\\n        <mat-error *ngIf=\\\"!formGroup.controls['pdesc'].valid\\\">\\n          {{getError('pdesc')}}\\n        </mat-error>\\n      </mat-form-field>\\n  \\n      <div class=\\\"form-element\\\">\\n        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" class=\\\"button\\\" [disabled]=\\\"!formGroup.valid\\\"> Add Post</button>\\n      </div>\\n  \\n    </form>\\n  </div>\\n\\n  <div  *ngIf=\\\"isResult\\\">\\n      Post added successfully\\n    </div>\"","import { Component, OnInit } from '@angular/core';\nimport {MatDialog} from '@angular/material';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport {Router} from '@angular/router';\nimport { AddpostService } from '../service/addpost.service';\nimport { Post } from '../model/post';\n@Component({\n  selector: 'app-addpost',\n  templateUrl: './addpost.component.html',\n  styleUrls: ['./addpost.component.css']\n})\nexport class AddpostComponent implements OnInit {\n  formGroup: FormGroup;\n  isValid: boolean = true;\n  isResult: boolean = false;\n  posts: Array<Post>;\n  constructor(private _addpostService: AddpostService,private router: Router,private formBuilder: FormBuilder) { }\n  createForm() {\n    this.formGroup = this.formBuilder.group({\n      'ptitle': ['', Validators.required],\n      'pdesc': ['', Validators.required],\n    });\n    this.isResult= false;\n  }\n  getError(el) {\n    switch (el) {\n      case 'ptitle':\n        if (this.formGroup.get('ptitle').hasError('required')) {\n          return 'Post Title required';\n          this.isResult= false;\n        }\n        break;\n      case 'pdesc':\n        if (this.formGroup.get('pdesc').hasError('required')) {\n          return 'Post Description required';\n          this.isResult= false;\n        }\n        break;\n      default:\n        return '';\n    }\n  }\n  ngOnInit() {\n    this.createForm();\n  }\n  onSubmit() : void {\n    \n    console.log(this.formGroup.get('ptitle').value);\n    \n    console.log(this.formGroup.get('pdesc').value);\n\n    if(this.formGroup.get('ptitle').value !=\"\" &&\n    this.formGroup.get('pdesc').value !=\"\" ){\n         if (this.isValid) {\n          this._addpostService.addPost(this.formGroup.get('ptitle').value,\n          this.formGroup.get('pdesc').value,localStorage.getItem('username')\n          //,new Date(Date.now())\n         \n          );\n          this.isResult= true;\n          this.formGroup.reset();\n         }\n         \n        \n        }\n\n    //if(this.formGroup.get('password').value == 'admin' && this.formGroup.get('password').value == 'admin'){\n     this.router.navigate([\"allpost\"]);\n    //}else {\n    //  alert(\"inside onSubmit Invalid credentials\");\n  //  }\n // }\n  }\n}\n","module.exports = \"table {\\r\\n    width: 100%;\\r\\n  }\\r\\n  th {\\r\\n    background-color: #4CAF50;\\r\\n    color: white;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWxscG9zdC9hbGxwb3N0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0VBQ2I7RUFDQTtJQUNFLHlCQUF5QjtJQUN6QixZQUFZO0VBQ2QiLCJmaWxlIjoic3JjL2FwcC9hbGxwb3N0L2FsbHBvc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuICB0aCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNENBRjUwO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gIH0iXX0= */\"","module.exports = \"<!--<table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n\\n   Note that these columns can be defined in any order.\\n        The actual rendered columns are set as a property on the row definition\\\" \\n Name Column \\n  <ng-container matColumnDef=\\\"PostTitle\\\">\\n    <th mat-header-cell *matHeaderCellDef> PostTitle </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.ptitle}} </td>\\n  </ng-container>\\n\\n   Weight Column\\n  <ng-container matColumnDef=\\\"PostDescription\\\">\\n    <th mat-header-cell *matHeaderCellDef> PostDescription </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.pdesc}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"Posted By\\\">\\n      <th mat-header-cell *matHeaderCellDef> PostTitle </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.uname}} </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"Edit\\\">\\n        <th mat-header-cell *matHeaderCellDef> PostTitle </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> <a mat-flat-button color=\\\"accent\\\" routerLink=\\\"/create\\\">\\n          <mat-icon inline=true>add</mat-icon> Create</a>\\n         </td>\\n      </ng-container>\\n    \\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"onRowClicked(row)\\\"></tr>\\n  \\n</table> -->\\n<div  *ngIf=\\\"!isValid\\\">\\n<table class=\\\"table-bordered\\\">\\n    <tr><th>Post Title</th><th>Post Description</th><th>Posted By</th><th>Add</th><th>Edit</th><th>Delete</th></tr>\\n    <tr *ngFor=\\\"let post of dataSource\\\">\\n     \\n      <td>{{post.ptitle}}</td>\\n       <td> {{post.pdesc}}</td>\\n       <td> {{post.uname}}</td>\\n      <!-- <td><a [routerLink]=\\\"['/edit', post._id]\\\" mat-flat-button color=\\\"accent\\\" ><mat-icon inline=true>edit</mat-icon> Edit</a></td>-->\\n      <td><a mat-flat-button color=\\\"accent\\\" type=\\\"submit\\\" (click) = \\\"addpost()\\\"><mat-icon inline=true>add</mat-icon> add</a></td>\\n       <td><a mat-flat-button color=\\\"accent\\\" type=\\\"submit\\\" (click) = \\\"editpost(post)\\\"><mat-icon inline=true>edit</mat-icon> edit</a></td>\\n     <td><a mat-flat-button color=\\\"accent\\\" type=\\\"submit\\\" (click) = \\\"deleteRouter(post._id)\\\"><mat-icon inline=true>delete</mat-icon> delete</a></td>\\n    \\n    </tr>\\n    \\n    </table>\\n  </div>\\n    <div  *ngIf=\\\"isValid\\\">\\n        <app-edit [post]=\\\"postvariable\\\"(editDone)=\\\"editDone()\\\"></app-edit>\\n      </div>\\n   \"","import { Component, OnInit } from '@angular/core';\nimport { Post } from '../model/post';\nimport { GetpostService } from '../service/getpost.service';\nimport {ActivatedRoute,Router} from '@angular/router';\nimport { EditComponent } from '../edit/edit.component';\nexport interface Posts {\n  ptitle: string;\n  pdesc: string;\n  uname: string;\n  }\n/**\n * @title Basic use of `<table mat-table>`\n */\n@Component({\n  selector: 'app-allpost',\n  templateUrl: './allpost.component.html',\n  styleUrls: ['./allpost.component.css']\n})\nexport class AllpostComponent implements OnInit {\n//displayedColumns: string[] = ['PostTitle', 'PostDescription','Posted By'];\n  //dataSource = ELEMENT_DATA;\n  public dataSource: Posts[] = [];\n  isLoading = false;\n  postvariable : any;\n  isValid: boolean = false;\n  constructor(private _getpostService: GetpostService,private _router: Router,private _activatedRoute: ActivatedRoute) {}\n\n  ngOnInit(): any {\n    this.getAllPost();\n    \n  }\n\n  getAllPost(){\n    this._getpostService.getAllposts()\n    .subscribe((data:Posts[]) => {\n      this.dataSource = data;\n      console.log(this.dataSource);\n    });\n  }\n  deleteRouter(_id) {\n\n    this._getpostService.deleteRouter(_id).subscribe(res => {\n    \n    this._router.navigate(['/user']);\n    \n    console.log('Deleted');\n    this.getAllPost();\n    });\n    \n  \n    \n    }\n\n    addpost(){\n      this._router.navigate(['/add']);\n    }\n    editpost(post){\n      \n      this.postvariable=post;\n      this.isValid=true;\n      \n    }\n  onRowClicked(row) {\n    console.log('Row clicked: ', row);\n}\n\neditDone(){\n  this.isValid=false;\n  this.getAllPost();\n}\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { UserComponent } from './user/user.component';\nimport {SignupComponent} from './signup/signup.component'\nimport { HomeComponent} from './home/home.component';\nimport {ErrorComponent} from './error/error.component';\nimport { EditComponent } from './edit/edit.component';\nimport { AddpostComponent} from './addpost/addpost.component';\nimport {AllpostComponent} from './allpost/allpost.component';\nconst routes: Routes = [\n  { path: 'user', component: UserComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  {path : 'home', component : HomeComponent},\n  {path : '', component : HomeComponent},\n  {path : 'error', component : ErrorComponent},\n  {path : 'edit', component : EditComponent},\n  {path : 'add', component : AddpostComponent},\n  {path : 'allpost', component : AllpostComponent},\n  \n  \n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-header></app-header>\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'TechMBookM';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgBootstrapFormValidationModule, CUSTOM_ERROR_MESSAGES } from 'ng-bootstrap-form-validation';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { CustomMaterialModule } from './core/material.module';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { UserComponent } from './user/user.component';\nimport { HeaderComponent } from './header/header.component';\nimport { HomeComponent } from './home/home.component';\nimport { SignupComponent } from './signup/signup.component';\nimport {CUSTOM_ERRORS} from './validation/custom-error';\nimport { AddpostComponent } from './addpost/addpost.component';\nimport { AllpostComponent } from './allpost/allpost.component'\nimport { LoginService } from './service/login.service';\nimport { RegisterService } from './service/register.service'\nimport { ErrorComponent } from './error/error.component';\nimport { AddpostService } from './service/addpost.service';\nimport { GetpostService } from './service/getpost.service';\nimport { EditService } from './service/edit.service';\nimport { EditComponent } from './edit/edit.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    UserComponent,\n    HeaderComponent,\n    HomeComponent,\n    SignupComponent,\n    AddpostComponent,\n    AllpostComponent,\n    ErrorComponent,\n    EditComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    CustomMaterialModule,\n    FormsModule,\n    HttpClientModule,\n    NgBootstrapFormValidationModule.forRoot(),\n    NgBootstrapFormValidationModule,\n    AppRoutingModule\n  ],\n  providers: [LoginService,RegisterService,AddpostService,GetpostService,EditService,{\n    provide: CUSTOM_ERROR_MESSAGES,\n    useValue: CUSTOM_ERRORS,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {NgModule} from \"@angular/core\";\r\nimport { CommonModule } from '@angular/common';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\n\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatBadgeModule,\r\n  MatBottomSheetModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatStepperModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatTreeModule,\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class CustomMaterialModule { }","module.exports = \"/*.example-card {\\r\\n    width: 400px;\\r\\n    margin: 10% auto;\\r\\n    }\\r\\n    .mat-card-title{\\r\\n    font-size: 16px;\\r\\n    }*/\\r\\n\\r\\n    .fill-remaining-space {\\r\\n        /* This fills the remaining space, by using flexbox. \\r\\n           Every toolbar row uses a flexbox row layout. */\\r\\n        flex: 1 1 auto;\\r\\n      }\\r\\n\\r\\n    .container {\\r\\n        padding: 10px;\\r\\n      }\\r\\n\\r\\n    .form {\\r\\n        min-width: 150px;\\r\\n        max-width: 500px;\\r\\n        width: 30%;\\r\\n      }\\r\\n\\r\\n    .form-element {\\r\\n        padding: 5px 0px 25px 2px;\\r\\n        width: 100%;\\r\\n      }\\r\\n\\r\\n    .button {\\r\\n        width: 100%;\\r\\n      }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWRpdC9lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztNQU1NOztJQUVGO1FBQ0k7eURBQ2lEO1FBQ2pELGNBQWM7TUFDaEI7O0lBRUE7UUFDRSxhQUFhO01BQ2Y7O0lBRUE7UUFDRSxnQkFBZ0I7UUFDaEIsZ0JBQWdCO1FBQ2hCLFVBQVU7TUFDWjs7SUFFQTtRQUNFLHlCQUF5QjtRQUN6QixXQUFXO01BQ2I7O0lBRUE7UUFDRSxXQUFXO01BQ2IiLCJmaWxlIjoic3JjL2FwcC9lZGl0L2VkaXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qLmV4YW1wbGUtY2FyZCB7XHJcbiAgICB3aWR0aDogNDAwcHg7XHJcbiAgICBtYXJnaW46IDEwJSBhdXRvO1xyXG4gICAgfVxyXG4gICAgLm1hdC1jYXJkLXRpdGxle1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgfSovXHJcblxyXG4gICAgLmZpbGwtcmVtYWluaW5nLXNwYWNlIHtcclxuICAgICAgICAvKiBUaGlzIGZpbGxzIHRoZSByZW1haW5pbmcgc3BhY2UsIGJ5IHVzaW5nIGZsZXhib3guIFxyXG4gICAgICAgICAgIEV2ZXJ5IHRvb2xiYXIgcm93IHVzZXMgYSBmbGV4Ym94IHJvdyBsYXlvdXQuICovXHJcbiAgICAgICAgZmxleDogMSAxIGF1dG87XHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgICAgIC5jb250YWluZXIge1xyXG4gICAgICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgICAgIC5mb3JtIHtcclxuICAgICAgICBtaW4td2lkdGg6IDE1MHB4O1xyXG4gICAgICAgIG1heC13aWR0aDogNTAwcHg7XHJcbiAgICAgICAgd2lkdGg6IDMwJTtcclxuICAgICAgfVxyXG4gICAgICBcclxuICAgICAgLmZvcm0tZWxlbWVudCB7XHJcbiAgICAgICAgcGFkZGluZzogNXB4IDBweCAyNXB4IDJweDtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgfVxyXG4gICAgICBcclxuICAgICAgLmJ1dHRvbiB7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIH0iXX0= */\"","module.exports = \"\\n<div class=\\\"container\\\"> \\n    <form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"onSubmit(formGroup.value)\\\" class=\\\"form\\\">\\n      <!-- <mat-form-field floatLabel=\\\"never\\\" class=\\\"form-element\\\">\\n            <input type=\\\"text\\\" matInput placeholder={{post._id}} formControlName=\\\"id\\\" >\\n           <mat-error *ngIf=\\\"formGroup.controls['ptitle'].invalid\\\">\\n              {{getError('ptitle')}}\\n            </mat-error>\\n          </mat-form-field>-->\\n      <mat-form-field floatLabel=\\\"never\\\" class=\\\"form-element\\\">\\n        <input type=\\\"text\\\" matInput placeholder={{post.ptitle}} formControlName=\\\"ptitle\\\">\\n        <!--<mat-error *ngIf=\\\"formGroup.controls['ptitle'].invalid\\\">\\n          {{getError('ptitle')}}\\n        </mat-error>-->\\n      </mat-form-field>\\n  \\n\\n      \\n      <mat-form-field floatLabel=\\\"never\\\" class=\\\"form-element\\\">\\n          <textarea matInput placeholder={{post.pdesc}} formControlName=\\\"pdesc\\\"></textarea>\\n        <!-- <mat-error *ngIf=\\\"!formGroup.controls['pdesc'].valid\\\">\\n          {{getError('pdesc')}}\\n        </mat-error>-->\\n      </mat-form-field>\\n  \\n      <div class=\\\"form-element\\\">\\n        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" class=\\\"button\\\"> Updatepost</button>\\n      </div>\\n  \\n    </form>\\n  </div>\"","import { Component, OnInit, Input,OnChanges,Output,EventEmitter } from '@angular/core';\nimport {ActivatedRoute,Router} from '@angular/router';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { EditService } from '../service/edit.service';\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit,OnChanges {\n  \n  formGroup: FormGroup;\n  isValid: boolean = true;\n  id: string;\n  @Output() editDone = new EventEmitter();\n  ngOnChanges(){\n    console.log(this.post);\n\nthis.id=this.post._id;\n    }\n  \n  @Input() post : any;\n  constructor(private _editService:EditService,private _router: Router,private _activatedRoute: ActivatedRoute,private formBuilder: FormBuilder) {\n    \n    console.log('inside the Edit');\n   }\n   createForm() {\n    this.formGroup = this.formBuilder.group({\n      'ptitle': ['', Validators.required],\n      'pdesc': ['', Validators.required],\n      'id': ['', Validators.required]\n    });\n    \n  }\n  ngOnInit() {\n    //console.log(this.post);\n    this.createForm();\n  }\n  onSubmit() : void {\n    \n    //console.log(this.formGroup.get('ptitle').value);\n    \n    //console.log(this.formGroup.get('pdesc').value);\n    const obj = {\n      \n      ptitle: this.formGroup.get('ptitle').value,\n      pdesc:  this.formGroup.get('pdesc').value,\n      uname :localStorage.getItem('username')\n      //date: date\n    };\n    if(this.formGroup.get('ptitle').value !=\"\" &&\n    this.formGroup.get('pdesc').value !=\"\" ){\n         if (this.isValid) {\n          this._editService.updatePost(this.id,obj).subscribe((res) => {\n            this.editDone.emit();\n        },\n        (error: any) => {\n            console.log(error);\n        });\n          \n        //this.editDone.emit();\n          /*this._editService.updatePost(this.id,obj\n            //this.formGroup.get('id').value,\n          //this.formGroup.get('ptitle').value,\n          //this.formGroup.get('pdesc').value,localStorage.getItem('username')\n          //,new Date(Date.now())\n          );*/\n         // this.editDone.emit();\n         }\n\n         \n\n\n         //.subscribe(res => console.log('Done'));\n\n   \n         //this.formGroup.reset();\n        // this._router.navigate([\"user\"]);\n         //this.editDone.emit();\n        }\n    //if(this.formGroup.get('password').value == 'admin' && this.formGroup.get('password').value == 'admin'){\n     //this.router.navigate([\"user\"]);\n    //}else {\n    //  alert(\"inside onSubmit Invalid credentials\");\n  //  }\n // }\n \n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vycm9yL2Vycm9yLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  Please check your user id and password/ Register to login the application.\\n</p>\\n<app-login></app-login>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <mat-toolbar-row>\\n  <span>TechM Book</span>\\n      <span class=\\\"example-fill-remaining-space\\\"></span>\\n      <span class=\\\"align-center\\\"></span>\\n      <span class=\\\"example-spacer\\\"></span>\\n      <button mat-button routerLink=\\\"/home\\\">Home</button>\\n      <button mat-button routerLink=\\\"/login\\\">Login</button>\\n      <button mat-button routerLink=\\\"/signup\\\">Registration</button>\\n      <!--  <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n    <mat-icon>more_vert</mat-icon>\\n  </button>\\n<mat-menu #menu=\\\"matMenu\\\">\\n    <button mat-menu-item>\\n      <mat-icon>dialpad</mat-icon>\\n      <span>Redial</span>\\n    </button>\\n    <button mat-menu-item disabled>\\n      <mat-icon>voicemail</mat-icon>\\n      <span>Check voicemail</span>\\n    </button>\\n    <button mat-menu-item>\\n      <mat-icon>notifications_off</mat-icon>\\n      <span>Disable alerts</span>\\n    </button>\\n  </mat-menu>-->\\n   </mat-toolbar-row>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<p>\\n  <img  class=\\\"homepic\\\" src=\\\"assets/img/website.png\\\" alt=\\\"Logo\\\" style=\\\"width:100%;\\\">\\n</p>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {MatDialog} from '@angular/material'\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"  /*.example-card {\\r\\n      width: 400px;\\r\\n      margin: 10% auto;\\r\\n      }\\r\\n      .mat-card-title{\\r\\n      font-size: 16px;\\r\\n      }*/\\r\\n\\r\\n      .fill-remaining-space {\\r\\n          /* This fills the remaining space, by using flexbox. \\r\\n            Every toolbar row uses a flexbox row layout. */\\r\\n          flex: 1 1 auto;\\r\\n        }\\r\\n\\r\\n      .container {\\r\\n          padding: 10px;\\r\\n        }\\r\\n\\r\\n      .form {\\r\\n          min-width: 150px;\\r\\n          max-width: 500px;\\r\\n          width: 10%;\\r\\n        }\\r\\n\\r\\n      .form-element {\\r\\n          padding: 5px 0px 25px 2px;\\r\\n          width: 100%;\\r\\n        }\\r\\n\\r\\n      .button {\\r\\n          width: 80%;\\r\\n        }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiRUFBRTs7Ozs7O1FBTU07O01BRUY7VUFDSTswREFDZ0Q7VUFDaEQsY0FBYztRQUNoQjs7TUFFQTtVQUNFLGFBQWE7UUFDZjs7TUFFQTtVQUNFLGdCQUFnQjtVQUNoQixnQkFBZ0I7VUFDaEIsVUFBVTtRQUNaOztNQUVBO1VBQ0UseUJBQXlCO1VBQ3pCLFdBQVc7UUFDYjs7TUFFQTtVQUNFLFVBQVU7UUFDWiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIgIC8qLmV4YW1wbGUtY2FyZCB7XHJcbiAgICAgIHdpZHRoOiA0MDBweDtcclxuICAgICAgbWFyZ2luOiAxMCUgYXV0bztcclxuICAgICAgfVxyXG4gICAgICAubWF0LWNhcmQtdGl0bGV7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgfSovXHJcblxyXG4gICAgICAuZmlsbC1yZW1haW5pbmctc3BhY2Uge1xyXG4gICAgICAgICAgLyogVGhpcyBmaWxscyB0aGUgcmVtYWluaW5nIHNwYWNlLCBieSB1c2luZyBmbGV4Ym94LiBcclxuICAgICAgICAgICAgRXZlcnkgdG9vbGJhciByb3cgdXNlcyBhIGZsZXhib3ggcm93IGxheW91dC4gKi9cclxuICAgICAgICAgIGZsZXg6IDEgMSBhdXRvO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAuY29udGFpbmVyIHtcclxuICAgICAgICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIC5mb3JtIHtcclxuICAgICAgICAgIG1pbi13aWR0aDogMTUwcHg7XHJcbiAgICAgICAgICBtYXgtd2lkdGg6IDUwMHB4O1xyXG4gICAgICAgICAgd2lkdGg6IDEwJTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgLmZvcm0tZWxlbWVudCB7XHJcbiAgICAgICAgICBwYWRkaW5nOiA1cHggMHB4IDI1cHggMnB4O1xyXG4gICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIC5idXR0b24ge1xyXG4gICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICB9Il19 */\"","module.exports = \"<div class=\\\"container\\\"> \\n  <form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"onSubmit(formGroup.value)\\\" class=\\\"form\\\">\\n\\n    <mat-form-field floatLabel=\\\"never\\\" class=\\\"form-element\\\">\\n      <input type=\\\"text\\\" matInput placeholder=\\\"Username\\\" formControlName=\\\"username\\\">\\n      <mat-error *ngIf=\\\"formGroup.controls['username'].invalid\\\">\\n        {{getError('user')}}\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field floatLabel=\\\"never\\\" class=\\\"form-element\\\">\\n      <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\">\\n      <mat-error *ngIf=\\\"!formGroup.controls['password'].valid\\\">\\n        {{getError('pass')}}\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <div class=\\\"form-element\\\">\\n      <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" class=\\\"button\\\" [disabled]=\\\"!formGroup.valid\\\">Submit Form</button>\\n    </div>\\n\\n  </form>\\n  \\n</div>\\n<div  *ngIf=\\\"isFormValid\\\">\\n    <h5 class=\\\"text-center text-primary\\\">Please check your user id and password/ Register to login the application. </h5>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport {ActivatedRoute,Router} from '@angular/router';\nimport {MatDialog} from '@angular/material';\nimport { LoginService } from '../service/login.service';\nimport { HttpClientModule } from '@angular/common/http'; \nimport { HttpModule } from '@angular/http';\n\n\t\nimport { ReactiveFormsModule } from '@angular/forms';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  formGroup: FormGroup;\n  username: string;\n  password: string;\n  isFormValid: boolean =true;\n  constructor(private _loginService: LoginService,private _router: Router,private _activatedRoute: ActivatedRoute,private formBuilder: FormBuilder) { }\n  createForm() {\n    this.formGroup = this.formBuilder.group({\n      'username': ['', Validators.required],\n      'password': ['', Validators.required],\n    });\n    this.isFormValid = false;\n  }\n  ngOnInit() {\n    this.createForm();\n  }\n  login() : void {\n    if(this.username == 'admin' && this.password == 'admin'){\n     this._router.navigate([\"allpost\"]);\n    }else {\n      alert(\"Invalid credentials\");\n    }\n  }\n  getError(el) {\n    switch (el) {\n      case 'user':\n        if (this.formGroup.get('username').hasError('required')) {\n          return 'Username required';\n        }\n        break;\n      case 'pass':\n        if (this.formGroup.get('password').hasError('required')) {\n          return 'Password required';\n        }\n        break;\n      default:\n        return '';\n    }\n  }\n  onSubmit() : void {\n   /* alert(this.formGroup.get('password').value);\n    console.log(this.formGroup.get('password').value);\n\n    if(this.formGroup.get('password').value == 'admin' && this.formGroup.get('password').value == 'admin'){\n     this.router.navigate([\"user\"]);\n    }else {\n      alert(\"inside onSubmit Invalid credentials\");\n    }*/\n    console.log('onSubmit');\n \n    this.isFormValid = true;\n    console.log(this.formGroup.get('password').value);\n    console.log(this.formGroup.get('username').value);\n\n    if (this.isFormValid) {\n      const user = {\n        username: this.formGroup.get('username').value, // Username input field\n        password: this.formGroup.get('password').value // Password input field\n      };\n      console.log('Form valid');\n      console.log(user.username + '  ' + user.password );\n      console.log('Formgroup value :' + this.formGroup.value);\n      //this._loginService.login(this.formGroup.value).subscribe(data => {\n               this._loginService.login(user).subscribe(data => {\n               localStorage.setItem('token', data.toString());\n              console.log(' Storage : ' + localStorage.getItem('token'));\n              localStorage.setItem(\"username\", user.username);\n              console.log(' username : ' + localStorage.getItem('username'));\n             // this.sto = true;\n              this._router.navigate(['/allpost']);\n            },\n            error => { console.log('Error ');\n            // this._router.navigate(['/error']);\n             }\n          );\n          }\n  }\n    \n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common//http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddpostService {\n  uri = 'http://localhost:3000/api';\n  constructor(private http: HttpClient) { }\n  //addUser(first_Name, last_Name, e_mail,pass_word,confirm_Password) {\n    addPost(ptitle, pdesc,username\n      //, date\n      ) {\n      console.log('inside the registeration service');\n\n    const obj = {\n      ptitle: ptitle,\n      pdesc: pdesc,\n      uname :username\n      //date: date\n    };\n    console.log(obj);\n    this.http.post(`${this.uri}/addpost`, obj)\n        .subscribe(res => console.log('Done'));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common//http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class EditService {\n  uri = 'http://localhost:3000/api';\n  constructor(private http: HttpClient) { }\n  //addUser(first_Name, last_Name, e_mail,pass_word,confirm_Password) {\n   /* updatePost(id,obj\n      //ptitle, pdesc,username\n      //, date\n      ) {\n      console.log('inside the registeration service');\n\n   /* const obj = {\n      id:id,\n      ptitle: ptitle,\n      pdesc: pdesc,\n      uname :username\n      //date: date\n    };*/\n   /* console.log(obj);\n    this.http.post(`${this.uri}/update/${id}`, obj)\n        .subscribe(res => console.log('Done'));\n      }*/\n  updatePost(id,obj) {\n    return this.http.post(`${this.uri}/update/${id}`, obj);\n    }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { Post } from '../model/post';\n\nimport { HttpClient } from '@angular/common//http';\nimport { Router } from '@angular/router';\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetpostService {\n\n  uri = 'http://localhost:3000/api/getpost';\n  \n  constructor(private http: HttpClient, private router: Router) {}\n  getAllposts() {\n    return this.http.get(`${this.uri}`);\n    }\n\n    deleteRouter(id) {\n\n      return this.http.delete(`http://localhost:3000/api/delete/${id}`);\n      \n      }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private _http: HttpClient) { }\n  login(body: any) {\n    return this._http.post('http://localhost:3000/api/login', body, {\n      observe: 'body'\n    });\n  }\n\n  getUserName() {\n    return this._http.get('http://localhost:3000/api/username', {\n      observe: 'body',\n      params: new HttpParams().append('token', localStorage.getItem('token'))\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common//http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n  uri = 'http://localhost:3000/api';\n  constructor(private http: HttpClient) { }\n  //addUser(first_Name, last_Name, e_mail,pass_word,confirm_Password) {\n    addUser(fname, lname,address, email,uname, pwd) {\n      console.log('inside the registeration service');\n\n    const obj = {\n      firstName: fname,\n      lastName: lname,\n      address :address,\n      email: email,\n      uname: uname,\n      password: pwd\n    };\n    console.log(obj);\n    this.http.post(`${this.uri}/add`, obj)\n        .subscribe(res => console.log('Done'));\n  }\n\n  \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ251cC9zaWdudXAuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<button mat-raised-button (click)=\\\"isLinear = !isLinear\\\" id=\\\"toggle-linear\\\">\\n    {{!isLinear ? 'Enable linear mode' : 'Disable linear mode'}}\\n  </button>\\n  <mat-horizontal-stepper [linear]=\\\"isLinear\\\" #stepper>\\n    <mat-step [stepControl]=\\\"firstFormGroup\\\">\\n      <form [formGroup]=\\\"firstFormGroup\\\" (ngSubmit)=\\\"onSubmit(firstFormGroup.value)\\\" class=\\\"form\\\" >\\n        <ng-template matStepLabel>Fill out your name</ng-template>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"First name\\\" formControlName=\\\"firstname\\\" required>\\n        </mat-form-field>\\n        <div>\\n        <mat-form-field>\\n            <input matInput placeholder=\\\"Last name\\\" formControlName=\\\"lastname\\\" required>\\n          </mat-form-field>\\n        </div>\\n        <div>\\n          <button mat-button  matStepperNext class=\\\"button\\\" [disabled]=\\\"!firstFormGroup.valid\\\">Next</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n    <mat-step [stepControl]=\\\"secondFormGroup\\\">\\n      <form [formGroup]=\\\"secondFormGroup\\\" (ngSubmit)=\\\"onSubmit(secondFormGroup.value)\\\" class=\\\"form\\\">\\n        <ng-template matStepLabel>Fill out your address</ng-template>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Address\\\" formControlName=\\\"address\\\" required>\\n        </mat-form-field>\\n        <div>\\n        <mat-form-field>\\n            <input matInput placeholder=\\\"email\\\" formControlName=\\\"email\\\" required>\\n          </mat-form-field>\\n        </div>\\n        <div>\\n          <button mat-button matStepperPrevious>Back</button>\\n          <button  mat-button matStepperNext class=\\\"button\\\" [disabled]=\\\"!secondFormGroup.valid\\\">Next</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n    <mat-step>\\n      <ng-template matStepLabel>Done</ng-template>\\n      <form [formGroup]=\\\"thirdFormGroup\\\" (ngSubmit)=\\\"onSubmit(thirdFormGroup.value)\\\" class=\\\"form\\\">\\n          <ng-template matStepLabel>Fill out your address</ng-template>\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"UserID\\\" formControlName=\\\"userid\\\" required>\\n          </mat-form-field>\\n          <div>\\n          <mat-form-field>\\n              <input matInput placeholder=\\\"Password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" required>\\n            </mat-form-field>\\n          </div>\\n  \\n        </form>\\n      <div>\\n        <button mat-button matStepperPrevious>Back</button>\\n        <button mat-button (click)=\\\"stepper.reset()\\\">Reset</button>\\n        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" (click)=\\\"onSubmit()\\\" class=\\\"button\\\" [disabled]=\\\"!thirdFormGroup.valid\\\">submit</button>\\n      </div>\\n    </mat-step>\\n    \\n  </mat-horizontal-stepper>\\n  <div  *ngIf=\\\"isValid\\\">\\n      <h5 class=\\\"text-center text-primary\\\">Registration Successfull</h5>\\n    </div>\"","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { RegisterService } from '../service/register.service';\nimport { Register } from '../model/register';\nimport {Router} from '@angular/router';\nimport {MatDialog} from '@angular/material';\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  isLinear = false;\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n  thirdFormGroup: FormGroup;\n  isValid: boolean = true;\n  posts: Array<Register>;\n  constructor(private _registerService: RegisterService,private _formBuilder: FormBuilder) {}\n\n  ngOnInit() {\n    this.firstFormGroup = this._formBuilder.group({\n      firstname: ['', Validators.required],\n      lastname: ['', Validators.required]\n    });\n    this.secondFormGroup = this._formBuilder.group({\n      address: ['', Validators.required],\n      email: ['', Validators.required]\n    });\n    this.thirdFormGroup = this._formBuilder.group({\n      userid: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n    this.isValid = false;\n  }\n\n  onReset() {\n    \n  }\n  onSubmit() : void {\n    /* alert(this.formGroup.get('password').value);\n     console.log(this.formGroup.get('password').value);\n \n     if(this.formGroup.get('password').value == 'admin' && this.formGroup.get('password').value == 'admin'){\n      this.router.navigate([\"user\"]);\n     }else {\n       alert(\"inside onSubmit Invalid credentials\");\n     }*/\n     console.log('onSubmit');\n     console.log(this.firstFormGroup.get('firstname').value);\n     console.log(this.firstFormGroup.get('lastname').value);\n     console.log(this.secondFormGroup.get('address').value);\n     console.log(this.secondFormGroup.get('email').value);\n     console.log(this.thirdFormGroup.get('userid').value);\n     console.log(this.thirdFormGroup.get('password').value);\n     \nif(this.firstFormGroup.get('firstname').value !=\"\" &&\nthis.firstFormGroup.get('lastname').value !=\"\" &&\nthis.secondFormGroup.get('address').value !=\"\" &&\nthis.secondFormGroup.get('email').value !=\"\" &&\nthis.thirdFormGroup.get('userid').value !=\"\" &&\nthis.thirdFormGroup.get('password').value !=\"\" \n){this.isValid = true;\n     if (this.isValid) {\n      this._registerService.addUser(this.firstFormGroup.get('firstname').value,\n      this.firstFormGroup.get('lastname').value, this.secondFormGroup.get('address').value, this.secondFormGroup.get('email').value,\n      this.thirdFormGroup.get('userid').value,this.thirdFormGroup.get('password').value);\n     }\n     this.firstFormGroup.reset();\n    this.secondFormGroup.reset();\n    this.thirdFormGroup.reset();\n    }\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-tab-group>\\n    \\n      <!--<mat-tab label=\\\"Add Post\\\"> \\n        <app-addpost></app-addpost> \\n      <app-allpost></app-allpost>\\n  </mat-tab>-->\\n  <mat-tab label=\\\"Post Details\\\"> \\n      <app-allpost></app-allpost>\\n  </mat-tab>\\n   <!-- <mat-tab label=\\\"update\\\"> Content 3 </mat-tab>\\n    <mat-tab label=\\\"Delete\\\"> Content 3 </mat-tab>-->\\n  </mat-tab-group>\"","import { Component, OnInit } from '@angular/core';\nimport {MatChipsModule} from '@angular/material/chips';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {ErrorMessage} from 'ng-bootstrap-form-validation';\r\n\r\nexport const CUSTOM_ERRORS: ErrorMessage[] = [\r\n  {\r\n    error: 'required',\r\n    format: requiredFormat\r\n  }, {\r\n    error: 'email',\r\n    format: emailFormat\r\n  }, {\r\n    error: 'passwordValidator',\r\n    format: passwordConfirmPasswordFormatEqual\r\n  }\r\n];\r\n\r\nexport function requiredFormat(label: string, error: any): string {\r\n  return `${label} IS MOST DEFINITELY REQUIRED!`;\r\n}\r\n\r\nexport function emailFormat(label: string, error: any): string {\r\n  return `${label} doesn't look like a valid email address.`;\r\n}\r\n\r\nexport function passwordConfirmPasswordFormatEqual(label: string, error: any): string {\r\n  return `${label} doesn't match passwords.`;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}